<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spring后端项目用Date接收时间参数的问题</title>
    <link href="/2020/06/12/Spring%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%94%A8Date%E6%8E%A5%E6%94%B6%E6%97%B6%E9%97%B4%E5%8F%82%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2020/06/12/Spring%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E7%94%A8Date%E6%8E%A5%E6%94%B6%E6%97%B6%E9%97%B4%E5%8F%82%E6%95%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在Spring后端用对象接受参数，如果POJO中包含Date类型的数据，会出去如下问题：</p><ul><li>前端传过来的格式为”yyyy-MM-dd”, 则接受到的时间会多8小时。</li><li>前端传过来的格式为”yyyy-MM-dd HH:mm:ss”， 则会报非法参数异常。</li></ul><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><ul><li>spring转json的默认实现jackson中会根据时区去转换时间，而jackson的默认时区跟 国内应该是相差8小时，所以再时间换算上自动加上了8小时。</li><li>加上时分秒后无法转化为Date类型的数据。</li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>  添加@DateTimeFormat注解</p>  <pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DateVO</span> </span>&#123;  <span class="hljs-meta">@DateTimeFormat</span>(pattern=<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>)  <span class="hljs-keyword">private</span> Date date;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis association的嵌套select语句，某个参数不是数据表中的字段</title>
    <link href="/2020/06/11/Mybatis-association%E7%9A%84%E5%A4%9A%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/06/11/Mybatis-association%E7%9A%84%E5%A4%9A%E5%8F%82%E6%95%B0%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h1><p>在使用Mysql association嵌套select语句时，遇到一个场景：select sql 中有两个参数，其中一个参数并不是数据表中一个字段。</p><p>需求：在查询InventoryImprove的时候能够关联查询ProductLocation。</p><p>BaseResultMap：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"BaseResultMap"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"com.leqee.wms.server.dao.meta.inventoryimprove.InventoryImproveDetailDO"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"BIGINT"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"id"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"inventory_improve_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"BIGINT"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"inventoryImproveId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"pl_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"plId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"status"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"VARCHAR"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"status"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"improve_num"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"improveNum"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"related_pl_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"relatedPlId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"created_time"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"DATE"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"createdTime"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"last_updated_time"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"DATE"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"lastUpdatedTime"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"productLocationDO"</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">"com.leqee.wms.server.dao.meta.productlocation.ProductLocationDO"</span></span><span class="hljs-tag">               <span class="hljs-attr">column</span>=<span class="hljs-string">"pl_id"</span></span><span class="hljs-tag">               <span class="hljs-attr">select</span>=<span class="hljs-string">"com.leqee.wms.server.dao.mapper.productlocation.ProductLocationMapper.selectById"</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span></code></pre><p>ProductLocationMapper.java 的 selectById方法：</p><pre><code class="hljs java"><span class="hljs-function">ProductLocationDO <span class="hljs-title">selectById</span><span class="hljs-params">(@Param(<span class="hljs-string">"plId"</span>)</span> Integer plId, @<span class="hljs-title">Param</span><span class="hljs-params">(<span class="hljs-string">"forUpdate"</span>)</span> Boolean forUpdate)</span>;</code></pre><p>ProductLocationMapper.xml 的 selectById方法：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectById"</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">"java.lang.Integer"</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">"BaseResultMap"</span>&gt;</span>  select  <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">"Base_Column_List"</span>/&gt;</span>  from product_location  where pl.pl_id = #&#123;plId,jdbcType=INTEGER&#125;  <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">"forUpdate"</span>&gt;</span>    for update  <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></code></pre><p>本以为这样是没有问题的，因为 ProductLocationMapper.selectById 第二个参数是Boolean类型，不指定值则值为Null，方法可以正常调用。但是在执行InventoryImprove的selectByPrimaryKey方法时报错如下：</p><pre><code class="hljs stylus">org<span class="hljs-selector-class">.mybatis</span><span class="hljs-selector-class">.spring</span><span class="hljs-selector-class">.MyBatisSystemException</span>: nested exception is org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.ibatis</span><span class="hljs-selector-class">.reflection</span><span class="hljs-selector-class">.ReflectionException</span>: There is no getter <span class="hljs-keyword">for</span> property named <span class="hljs-string">'forUpdate'</span> <span class="hljs-keyword">in</span> <span class="hljs-string">'class java.lang.Integer'</span></code></pre><p>forUpdate为非键值对的变量时，无法获得对应变量的get方法。于是尝试association多参数形式：</p><pre><code class="hljs ini"><span class="hljs-attr">column</span>=<span class="hljs-string">"&#123;plId=pl_id&#125;"</span></code></pre><p>依然报错：</p><pre><code class="hljs css"><span class="hljs-selector-tag">org</span><span class="hljs-selector-class">.mybatis</span><span class="hljs-selector-class">.spring</span><span class="hljs-selector-class">.MyBatisSystemException</span>: <span class="hljs-selector-tag">nested</span> <span class="hljs-selector-tag">exception</span> <span class="hljs-selector-tag">is</span> <span class="hljs-selector-tag">org</span><span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.ibatis</span><span class="hljs-selector-class">.reflection</span><span class="hljs-selector-class">.ReflectionException</span>: <span class="hljs-selector-tag">Error</span> <span class="hljs-selector-tag">instantiating</span> <span class="hljs-selector-tag">class</span> <span class="hljs-selector-tag">java</span><span class="hljs-selector-class">.lang</span><span class="hljs-selector-class">.Integer</span> <span class="hljs-selector-tag">with</span> <span class="hljs-selector-tag">invalid</span> <span class="hljs-selector-tag">types</span> () <span class="hljs-selector-tag">or</span> <span class="hljs-selector-tag">values</span> (). <span class="hljs-selector-tag">Cause</span>: <span class="hljs-selector-tag">java</span><span class="hljs-selector-class">.lang</span><span class="hljs-selector-class">.NoSuchMethodException</span>: <span class="hljs-selector-tag">java</span><span class="hljs-selector-class">.lang</span><span class="hljs-selector-class">.Integer</span>.&lt;<span class="hljs-selector-tag">init</span>&gt;()</code></pre><p>问题出现在 ProductLocationMapper.selectById方法上，parameterType=”java.lang.Integer”指定了参数类型为Integer。查看官方文档：</p><pre><code class="hljs bash">parameterType将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（<span class="hljs-built_in">unset</span>）。</code></pre><p>确定去掉parameterType=”java.lang.Integer”没有风险，然后再次执行，成功。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>正确的xml代码：</p><p>BaseResultMap：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"BaseResultMap"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"com.leqee.wms.server.dao.meta.inventoryimprove.InventoryImproveDetailDO"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"BIGINT"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"id"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"inventory_improve_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"BIGINT"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"inventoryImproveId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"pl_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"plId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"status"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"VARCHAR"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"status"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"improve_num"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"improveNum"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"related_pl_id"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"INTEGER"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"relatedPlId"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"created_time"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"DATE"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"createdTime"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"last_updated_time"</span> <span class="hljs-attr">jdbcType</span>=<span class="hljs-string">"DATE"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"lastUpdatedTime"</span>/&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"productLocationDO"</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">"com.leqee.wms.server.dao.meta.productlocation.ProductLocationDO"</span></span><span class="hljs-tag">               <span class="hljs-attr">column</span>=<span class="hljs-string">"pl_id"</span></span><span class="hljs-tag">               <span class="hljs-attr">select</span>=<span class="hljs-string">"com.leqee.wms.server.dao.mapper.productlocation.ProductLocationMapper.selectById"</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span></code></pre><p>ProductLocationMapper.xml 的 selectById方法：</p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectById"</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">"BaseResultMap"</span>&gt;</span>  select  <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">"Base_Column_List"</span>/&gt;</span>  from product_location  where pl.pl_id = #&#123;plId,jdbcType=INTEGER&#125;  <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">"forUpdate"</span>&gt;</span>    for update  <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记一次 IntelliJ IDEA 项目启动非常慢的坑</title>
    <link href="/2020/06/02/%E8%AE%B0%E4%B8%80%E6%AC%A1-IntelliJ-IDEA-%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E9%9D%9E%E5%B8%B8%E6%85%A2%E7%9A%84%E5%9D%91/"/>
    <url>/2020/06/02/%E8%AE%B0%E4%B8%80%E6%AC%A1-IntelliJ-IDEA-%E9%A1%B9%E7%9B%AE%E5%90%AF%E5%8A%A8%E9%9D%9E%E5%B8%B8%E6%85%A2%E7%9A%84%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>某次在使用 IntelliJ IDEA Debug 模式启动项目的时候，经过很久（半小时以上）也没有启动成功。</p><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>后来发现是由于在方法签名上打了断点导致的。在这种情况下启动项目会提示：Method breakpoints may dramatically slow down debugging。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>去掉打在方法签名上的断点后，项目又能正常启动了。本以为只是会稍微慢点就没在意，没想到慢的离谱。</p>]]></content>
    
    
    
    <tags>
      
      <tag>IntelliJ IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/05/31/hello-world/"/>
    <url>/2020/05/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
